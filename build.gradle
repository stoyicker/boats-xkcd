import java.nio.file.Paths

apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    jcenter()
  }

  def androidPluginVersion = "1.5.0"
  def dexcountPluginVersion = "0.3.1"
  def androidAptPluginVersion = "1.8"
  def pSyncPluginVersion = "1.1.5"
  def fileDownloadPluginVersion = "2.1.0"
  def jsonSchema2PojoPluginVersion = "0.4.18"

  def classpathDependencies = [androidPlugin        : "com.android.tools.build:gradle:${androidPluginVersion}",
                               dexcountPlugin       : "com.getkeepsafe.dexcount:dexcount-gradle-plugin:${dexcountPluginVersion}",
                               androidAptPlugin     : "com.neenbedankt.gradle.plugins:android-apt:${androidAptPluginVersion}",
                               pSync                : "gradle.plugin.com.flipboard:psync:${pSyncPluginVersion}",
                               fileDownloadPlugin   : "de.undercouch:gradle-download-task:${fileDownloadPluginVersion}",
                               jsonSchema2PojoPlugin: "org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:${jsonSchema2PojoPluginVersion}"]

  dependencies {
    classpath classpathDependencies.androidPlugin
    classpath classpathDependencies.dexcountPlugin
    classpath classpathDependencies.androidAptPlugin
    classpath classpathDependencies.pSync
    classpath classpathDependencies.fileDownloadPlugin
    classpath classpathDependencies.jsonSchema2PojoPlugin
  }
}

//If this is modified, remember to update the script(s) accordingly
def staticAnalysisReportFolderTarget = project.rootDir.getAbsolutePath() + "/staticAnalysisReport"

// Query git for the tag and commit count. Use these to automate versioning. (https://github.com/nickbutcher/plaid/blob/master/app/build.gradle)
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def gitCommitCount = 100 + Integer.parseInt(
    'git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

allprojects {
  ext {
    //Application details
    androidVersionCode = gitCommitCount
    androidVersionName = gitTag
    androidTestInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"

    //Gradle wrapper version
    gradleWrapperVersion = '2.12'

    androidApplicationIdBase = "com.jorge.boats.xkcd%s"
    javaVersion = JavaVersion.VERSION_1_7

    staticAnalysisReportTarget = staticAnalysisReportFolderTarget
  }
}

task wrapper(type: Wrapper) {
  group "Build Setup"
  description "Creates the gradle wrapper."

  //noinspection GroovyAssignabilityCheck
  gradleVersion rootProject.ext.gradleWrapperVersion
}

task clean(type: Delete, overwrite: true) {
  group "Verification"
  description "Deletes the build directories of the whole project and the static analysis result."

  for (final Project x : rootProject.allprojects) {
    delete x.buildDir
    delete Paths.get(x.getProjectDir().absolutePath, staticAnalysisReportFolderTarget).
        toAbsolutePath().
        toString()
  }
}